C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Ali Rah
                    -man\SimplicityStudio\v4_workspace\EFM8BB3_FunctionGenerator_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) 
                    -WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Ali Rahman\
                    -SimplicityStudio\v4_workspace\EFM8BB3_FunctionGenerator_2\inc\graphics;C:\Users\Ali Rahman\SimplicityStudio\v4_workspace
                    -\EFM8BB3_FunctionGenerator_2\inc;C:\Users\Ali Rahman\SimplicityStudio\v4_workspace\EFM8BB3_FunctionGenerator_2\inc\confi
                    -g;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/deve
                    -loper/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//De
                    -vice/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/ef
                    -m8_joystick;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/Si
                    -liconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLab
                    -s/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/Simplici
                    -tyStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/
                    -v4.0.3//Device/EFM8BB3/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_retar
                    -getserial) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              ADC_0_enter_DefaultMode_from_RESET();
  34   1              DAC_0_enter_DefaultMode_from_RESET();
  35   1              DAC_1_enter_DefaultMode_from_RESET();
  36   1              DACGCF_0_enter_DefaultMode_from_RESET();
  37   1              VREF_0_enter_DefaultMode_from_RESET();
  38   1              CLOCK_0_enter_DefaultMode_from_RESET();
  39   1              TIMER01_0_enter_DefaultMode_from_RESET();
  40   1              TIMER16_3_enter_DefaultMode_from_RESET();
  41   1              TIMER16_4_enter_DefaultMode_from_RESET();
  42   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  43   1              SPI_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 2   

  44   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  45   1              // Restore the SFRPAGE
  46   1              SFRPAGE = SFRPAGE_save;
  47   1              // [Config Calls]$
  48   1      
  49   1      }
  50          
  51          //================================================================================
  52          // WDT_0_enter_DefaultMode_from_RESET
  53          //================================================================================
  54          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  55   1              // $[WDTCN - Watchdog Timer Control]
  56   1              SFRPAGE = 0x00;
  57   1              //Disable Watchdog with key sequence
  58   1              WDTCN = 0xDE; //First key
  59   1              WDTCN = 0xAD; //Second key
  60   1              // [WDTCN - Watchdog Timer Control]$
  61   1      
  62   1      }
  63          
  64          //================================================================================
  65          // PORTS_0_enter_DefaultMode_from_RESET
  66          //================================================================================
  67          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  68   1              // $[P0 - Port 0 Pin Latch]
  69   1              // [P0 - Port 0 Pin Latch]$
  70   1      
  71   1              // $[P0MDOUT - Port 0 Output Mode]
  72   1              /***********************************************************************
  73   1               - P0.0 output is open-drain
  74   1               - P0.1 output is open-drain
  75   1               - P0.2 output is open-drain
  76   1               - P0.3 output is open-drain
  77   1               - P0.4 output is open-drain
  78   1               - P0.5 output is open-drain
  79   1               - P0.6 output is push-pull
  80   1               - P0.7 output is open-drain
  81   1               ***********************************************************************/
  82   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  83   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  84   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
  85   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  86   1              // [P0MDOUT - Port 0 Output Mode]$
  87   1      
  88   1              // $[P0MDIN - Port 0 Input Mode]
  89   1              /***********************************************************************
  90   1               - P0.0 pin is configured for analog mode
  91   1               - P0.1 pin is configured for digital mode
  92   1               - P0.2 pin is configured for digital mode
  93   1               - P0.3 pin is configured for digital mode
  94   1               - P0.4 pin is configured for digital mode
  95   1               - P0.5 pin is configured for digital mode
  96   1               - P0.6 pin is configured for digital mode
  97   1               - P0.7 pin is configured for digital mode
  98   1               ***********************************************************************/
  99   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 100   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 101   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 102   1              // [P0MDIN - Port 0 Input Mode]$
 103   1      
 104   1              // $[P0SKIP - Port 0 Skip]
 105   1              /***********************************************************************
 106   1               - P0.0 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 3   

 107   1               - P0.1 pin is skipped by the crossbar
 108   1               - P0.2 pin is skipped by the crossbar
 109   1               - P0.3 pin is skipped by the crossbar
 110   1               - P0.4 pin is skipped by the crossbar
 111   1               - P0.5 pin is skipped by the crossbar
 112   1               - P0.6 pin is not skipped by the crossbar
 113   1               - P0.7 pin is not skipped by the crossbar
 114   1               ***********************************************************************/
 115   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 116   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 117   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 118   1              // [P0SKIP - Port 0 Skip]$
 119   1      
 120   1              // $[P0MASK - Port 0 Mask]
 121   1              /***********************************************************************
 122   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 123   1               event
 124   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 125   1               event
 126   1               - P0.2 pin logic value is compared to P0MAT.2
 127   1               - P0.3 pin logic value is compared to P0MAT.3
 128   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 129   1               event
 130   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 131   1               event
 132   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 133   1               event
 134   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 135   1               event
 136   1               ***********************************************************************/
 137   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 138   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 139   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 140   1              // [P0MASK - Port 0 Mask]$
 141   1      
 142   1              // $[P0MAT - Port 0 Match]
 143   1              // [P0MAT - Port 0 Match]$
 144   1      
 145   1      }
 146          
 147          //================================================================================
 148          // PORTS_1_enter_DefaultMode_from_RESET
 149          //================================================================================
 150          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 151   1              // $[P1 - Port 1 Pin Latch]
 152   1              // [P1 - Port 1 Pin Latch]$
 153   1      
 154   1              // $[P1MDOUT - Port 1 Output Mode]
 155   1              /***********************************************************************
 156   1               - P1.0 output is push-pull
 157   1               - P1.1 output is open-drain
 158   1               - P1.2 output is open-drain
 159   1               - P1.3 output is open-drain
 160   1               - P1.4 output is push-pull
 161   1               - P1.5 output is push-pull
 162   1               - P1.6 output is push-pull
 163   1               - P1.7 output is open-drain
 164   1               ***********************************************************************/
 165   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 166   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 167   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 168   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 169   1              // [P1MDOUT - Port 1 Output Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 4   

 170   1      
 171   1              // $[P1MDIN - Port 1 Input Mode]
 172   1              /***********************************************************************
 173   1               - P1.0 pin is configured for digital mode
 174   1               - P1.1 pin is configured for analog mode
 175   1               - P1.2 pin is configured for digital mode
 176   1               - P1.3 pin is configured for digital mode
 177   1               - P1.4 pin is configured for digital mode
 178   1               - P1.5 pin is configured for digital mode
 179   1               - P1.6 pin is configured for digital mode
 180   1               - P1.7 pin is configured for analog mode
 181   1               ***********************************************************************/
 182   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 183   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 184   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 185   1              // [P1MDIN - Port 1 Input Mode]$
 186   1      
 187   1              // $[P1SKIP - Port 1 Skip]
 188   1              /***********************************************************************
 189   1               - P1.0 pin is not skipped by the crossbar
 190   1               - P1.1 pin is skipped by the crossbar
 191   1               - P1.2 pin is skipped by the crossbar
 192   1               - P1.3 pin is skipped by the crossbar
 193   1               - P1.4 pin is skipped by the crossbar
 194   1               - P1.5 pin is skipped by the crossbar
 195   1               - P1.6 pin is skipped by the crossbar
 196   1               - P1.7 pin is skipped by the crossbar
 197   1               ***********************************************************************/
 198   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 199   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 200   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 201   1              // [P1SKIP - Port 1 Skip]$
 202   1      
 203   1              // $[P1MASK - Port 1 Mask]
 204   1              // [P1MASK - Port 1 Mask]$
 205   1      
 206   1              // $[P1MAT - Port 1 Match]
 207   1              // [P1MAT - Port 1 Match]$
 208   1      
 209   1      }
 210          
 211          //================================================================================
 212          // PORTS_2_enter_DefaultMode_from_RESET
 213          //================================================================================
 214          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 215   1              // $[P2 - Port 2 Pin Latch]
 216   1              // [P2 - Port 2 Pin Latch]$
 217   1      
 218   1              // $[P2MDOUT - Port 2 Output Mode]
 219   1              /***********************************************************************
 220   1               - P2.0 output is open-drain
 221   1               - P2.1 output is open-drain
 222   1               - P2.2 output is open-drain
 223   1               - P2.3 output is open-drain
 224   1               - P2.4 output is open-drain
 225   1               - P2.5 output is open-drain
 226   1               - P2.6 output is push-pull
 227   1               ***********************************************************************/
 228   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 229   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 230   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 231   1                              | P2MDOUT_B6__PUSH_PULL;
 232   1              // [P2MDOUT - Port 2 Output Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 5   

 233   1      
 234   1              // $[P2MDIN - Port 2 Input Mode]
 235   1              // [P2MDIN - Port 2 Input Mode]$
 236   1      
 237   1              // $[P2SKIP - Port 2 Skip]
 238   1              /***********************************************************************
 239   1               - P2.0 pin is not skipped by the crossbar
 240   1               - P2.1 pin is not skipped by the crossbar
 241   1               - P2.2 pin is not skipped by the crossbar
 242   1               - P2.3 pin is skipped by the crossbar
 243   1               ***********************************************************************/
 244   1              SFRPAGE = 0x20;
 245   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 246   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 247   1              // [P2SKIP - Port 2 Skip]$
 248   1      
 249   1              // $[P2MASK - Port 2 Mask]
 250   1              // [P2MASK - Port 2 Mask]$
 251   1      
 252   1              // $[P2MAT - Port 2 Match]
 253   1              // [P2MAT - Port 2 Match]$
 254   1      
 255   1      }
 256          
 257          //================================================================================
 258          // PORTS_3_enter_DefaultMode_from_RESET
 259          //================================================================================
 260          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 261   1              // $[P3 - Port 3 Pin Latch]
 262   1              // [P3 - Port 3 Pin Latch]$
 263   1      
 264   1              // $[P3MDOUT - Port 3 Output Mode]
 265   1              // [P3MDOUT - Port 3 Output Mode]$
 266   1      
 267   1              // $[P3MDIN - Port 3 Input Mode]
 268   1              /***********************************************************************
 269   1               - P3.0 pin is configured for analog mode
 270   1               - P3.1 pin is configured for analog mode
 271   1               - P3.2 pin is configured for digital mode
 272   1               - P3.3 pin is configured for digital mode
 273   1               - P3.4 pin is configured for digital mode
 274   1               - P3.7 pin is configured for digital mode
 275   1               ***********************************************************************/
 276   1              P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__DIGITAL
 277   1                              | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 278   1              // [P3MDIN - Port 3 Input Mode]$
 279   1      
 280   1      }
 281          
 282          //================================================================================
 283          // PBCFG_0_enter_DefaultMode_from_RESET
 284          //================================================================================
 285          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 286   1              // $[XBR2 - Port I/O Crossbar 2]
 287   1              /***********************************************************************
 288   1               - Weak Pullups enabled 
 289   1               - Crossbar enabled
 290   1               - UART1 I/O unavailable at Port pin
 291   1               - UART1 RTS1 unavailable at Port pin
 292   1               - UART1 CTS1 unavailable at Port pin
 293   1               ***********************************************************************/
 294   1              SFRPAGE = 0x00;
 295   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 6   

 296   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 297   1                              | XBR2_URT1CTSE__DISABLED;
 298   1              // [XBR2 - Port I/O Crossbar 2]$
 299   1      
 300   1              // $[PRTDRV - Port Drive Strength]
 301   1              // [PRTDRV - Port Drive Strength]$
 302   1      
 303   1              // $[XBR0 - Port I/O Crossbar 0]
 304   1              /***********************************************************************
 305   1               - UART0 I/O unavailable at Port pin
 306   1               - SPI I/O routed to Port pins
 307   1               - SMBus 0 I/O unavailable at Port pins
 308   1               - CP0 unavailable at Port pin
 309   1               - Asynchronous CP0 unavailable at Port pin
 310   1               - CP1 unavailable at Port pin
 311   1               - Asynchronous CP1 unavailable at Port pin
 312   1               - SYSCLK unavailable at Port pin
 313   1               ***********************************************************************/
 314   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 315   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 316   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 317   1              // [XBR0 - Port I/O Crossbar 0]$
 318   1      
 319   1              // $[XBR1 - Port I/O Crossbar 1]
 320   1              // [XBR1 - Port I/O Crossbar 1]$
 321   1      
 322   1      }
 323          
 324          //================================================================================
 325          // ADC_0_enter_DefaultMode_from_RESET
 326          //================================================================================
 327          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 328   1              // $[ADC0CN2 - ADC0 Control 2]
 329   1              // [ADC0CN2 - ADC0 Control 2]$
 330   1      
 331   1              // $[ADC0CN1 - ADC0 Control 1]
 332   1              // [ADC0CN1 - ADC0 Control 1]$
 333   1      
 334   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 335   1              /***********************************************************************
 336   1               - Select ADC0.13
 337   1               ***********************************************************************/
 338   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 339   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 340   1      
 341   1              // $[ADC0CF2 - ADC0 Power Control]
 342   1              /***********************************************************************
 343   1               - The ADC0 ground reference is the GND pin
 344   1               - The ADC0 voltage reference is the VDD pin
 345   1               - Power Up Delay Time = 0x1F
 346   1               ***********************************************************************/
 347   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 348   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 349   1              // [ADC0CF2 - ADC0 Power Control]$
 350   1      
 351   1              // $[ADC0CF0 - ADC0 Configuration]
 352   1              /***********************************************************************
 353   1               - ADCCLK = SYSCLK
 354   1               - SAR Clock Divider = 0x01
 355   1               ***********************************************************************/
 356   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 357   1              // [ADC0CF0 - ADC0 Configuration]$
 358   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 7   

 359   1              // $[ADC0CF1 - ADC0 Configuration]
 360   1              /***********************************************************************
 361   1               - Enable low power mode
 362   1               - Conversion Tracking Time = 0x01
 363   1               ***********************************************************************/
 364   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 365   1              // [ADC0CF1 - ADC0 Configuration]$
 366   1      
 367   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 368   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 369   1      
 370   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 371   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 372   1      
 373   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 374   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 375   1      
 376   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 377   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 378   1      
 379   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 380   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 381   1      
 382   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 383   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 384   1      
 385   1              // $[ADC0CN0 - ADC0 Control 0]
 386   1              /***********************************************************************
 387   1               - Enable ADC0 
 388   1               ***********************************************************************/
 389   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 390   1              // [ADC0CN0 - ADC0 Control 0]$
 391   1      
 392   1      }
 393          
 394          //================================================================================
 395          // DAC_0_enter_DefaultMode_from_RESET
 396          //================================================================================
 397          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 398   1              // $[DAC0CF0 - DAC0 Configuration 0]
 399   1              /***********************************************************************
 400   1               - DAC0 is enabled and will drive the output pin
 401   1               - DAC0 output updates occur on Timer 4 high byte overflow
 402   1               - DAC0 input is treated as right-justified
 403   1               - All resets will reset DAC0 and its associated registers
 404   1               ***********************************************************************/
 405   1              SFRPAGE = 0x30;
 406   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 407   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 408   1              // [DAC0CF0 - DAC0 Configuration 0]$
 409   1      
 410   1              // $[DAC0CF1 - DAC0 Configuration 1]
 411   1              // [DAC0CF1 - DAC0 Configuration 1]$
 412   1      
 413   1      }
 414          
 415          //================================================================================
 416          // DAC_1_enter_DefaultMode_from_RESET
 417          //================================================================================
 418          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 419   1              // $[DAC1CF0 - DAC1 Configuration 0]
 420   1              /***********************************************************************
 421   1               - DAC1 is enabled and will drive the output pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 8   

 422   1               - DAC1 output updates occur on Timer 4 high byte overflow
 423   1               - DAC1 input is treated as right-justified
 424   1               - All resets will reset DAC1 and its associated registers
 425   1               ***********************************************************************/
 426   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 427   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 428   1              // [DAC1CF0 - DAC1 Configuration 0]$
 429   1      
 430   1              // $[DAC1CF1 - DAC1 Configuration 1]
 431   1              // [DAC1CF1 - DAC1 Configuration 1]$
 432   1      
 433   1      }
 434          
 435          //================================================================================
 436          // DACGCF_0_enter_DefaultMode_from_RESET
 437          //================================================================================
 438          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 439   1              // $[DACGCF0 - DAC Global Configuration 0]
 440   1              /***********************************************************************
 441   1               - Select the VREF pin
 442   1               - Select the VDD supply
 443   1               - Input = DAC1H:DAC1L
 444   1               - Input = DAC3H:DAC3L
 445   1               - DAC1 always updates from the data source selected in D1SRC
 446   1               - DAC3 always updates from the data source selected in D3SRC
 447   1               ***********************************************************************/
 448   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D23REFSL__VDD
 449   1                              | DACGCF0_D1SRC__DAC1 | DACGCF0_D3SRC__DAC3 | DACGCF0_D1AMEN__NORMAL
 450   1                              | DACGCF0_D3AMEN__NORMAL;
 451   1              // [DACGCF0 - DAC Global Configuration 0]$
 452   1      
 453   1              // $[DACGCF2 - DAC Global Configuration 2]
 454   1              // [DACGCF2 - DAC Global Configuration 2]$
 455   1      
 456   1      }
 457          
 458          //================================================================================
 459          // VREF_0_enter_DefaultMode_from_RESET
 460          //================================================================================
 461          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 462   1              // $[REF0CN - Voltage Reference Control]
 463   1              /***********************************************************************
 464   1               - 2.4 V reference output to VREF pin
 465   1               ***********************************************************************/
 466   1              SFRPAGE = 0x00;
 467   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
 468   1              // [REF0CN - Voltage Reference Control]$
 469   1      
 470   1      }
 471          
 472          //================================================================================
 473          // CLOCK_0_enter_DefaultMode_from_RESET
 474          //================================================================================
 475          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 476   1              // $[HFOSC1 Setup]
 477   1              // [HFOSC1 Setup]$
 478   1      
 479   1              // $[CLKSEL - Clock Select]
 480   1              /***********************************************************************
 481   1               - Clock derived from the Internal High Frequency Oscillator 0
 482   1               - SYSCLK is equal to selected clock source divided by 1
 483   1               ***********************************************************************/
 484   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 9   

 485   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 486   1                      ;
 487   1              // [CLKSEL - Clock Select]$
 488   1      
 489   1      }
 490          
 491          //================================================================================
 492          // TIMER01_0_enter_DefaultMode_from_RESET
 493          //================================================================================
 494          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 495   1              // $[Timer Initialization]
 496   1              //Save Timer Configuration
 497   1              uint8_t TCON_save;
 498   1              TCON_save = TCON;
 499   1              //Stop Timers
 500   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 501   1      
 502   1              // [Timer Initialization]$
 503   1      
 504   1              // $[TH0 - Timer 0 High Byte]
 505   1              /***********************************************************************
 506   1               - Timer 0 High Byte = 0x01
 507   1               ***********************************************************************/
 508   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 509   1              // [TH0 - Timer 0 High Byte]$
 510   1      
 511   1              // $[TL0 - Timer 0 Low Byte]
 512   1              // [TL0 - Timer 0 Low Byte]$
 513   1      
 514   1              // $[TH1 - Timer 1 High Byte]
 515   1              // [TH1 - Timer 1 High Byte]$
 516   1      
 517   1              // $[TL1 - Timer 1 Low Byte]
 518   1              // [TL1 - Timer 1 Low Byte]$
 519   1      
 520   1              // $[Timer Restoration]
 521   1              //Restore Timer Configuration
 522   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 523   1      
 524   1              // [Timer Restoration]$
 525   1      
 526   1      }
 527          
 528          //================================================================================
 529          // TIMER16_3_enter_DefaultMode_from_RESET
 530          //================================================================================
 531          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 532   1              // $[Timer Initialization]
 533   1              // Save Timer Configuration
 534   1              uint8_t TMR3CN0_TR3_save;
 535   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 536   1              // Stop Timer
 537   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 538   1              // [Timer Initialization]$
 539   1      
 540   1              // $[TMR3CN1 - Timer 3 Control 1]
 541   1              // [TMR3CN1 - Timer 3 Control 1]$
 542   1      
 543   1              // $[TMR3CN0 - Timer 3 Control]
 544   1              // [TMR3CN0 - Timer 3 Control]$
 545   1      
 546   1              // $[TMR3H - Timer 3 High Byte]
 547   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 10  

 548   1               - Timer 3 High Byte = 0xF8
 549   1               ***********************************************************************/
 550   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 551   1              // [TMR3H - Timer 3 High Byte]$
 552   1      
 553   1              // $[TMR3L - Timer 3 Low Byte]
 554   1              /***********************************************************************
 555   1               - Timer 3 Low Byte = 0x06
 556   1               ***********************************************************************/
 557   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 558   1              // [TMR3L - Timer 3 Low Byte]$
 559   1      
 560   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 561   1              /***********************************************************************
 562   1               - Timer 3 Reload High Byte = 0xF8
 563   1               ***********************************************************************/
 564   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 565   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 566   1      
 567   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 568   1              /***********************************************************************
 569   1               - Timer 3 Reload Low Byte = 0x06
 570   1               ***********************************************************************/
 571   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 572   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 573   1      
 574   1              // $[TMR3CN0]
 575   1              /***********************************************************************
 576   1               - Start Timer 3 running
 577   1               ***********************************************************************/
 578   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 579   1              // [TMR3CN0]$
 580   1      
 581   1              // $[Timer Restoration]
 582   1              // Restore Timer Configuration
 583   1              TMR3CN0 |= TMR3CN0_TR3_save;
 584   1              // [Timer Restoration]$
 585   1      
 586   1      }
 587          
 588          //================================================================================
 589          // TIMER16_4_enter_DefaultMode_from_RESET
 590          //================================================================================
 591          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 592   1              // $[Timer Initialization]
 593   1              // Save Timer Configuration
 594   1              uint8_t TMR4CN0_TR4_save;
 595   1              SFRPAGE = 0x10;
 596   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 597   1              // Stop Timer
 598   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 599   1              // [Timer Initialization]$
 600   1      
 601   1              // $[TMR4CN1 - Timer 4 Control 1]
 602   1              // [TMR4CN1 - Timer 4 Control 1]$
 603   1      
 604   1              // $[TMR4CN0 - Timer 4 Control]
 605   1              // [TMR4CN0 - Timer 4 Control]$
 606   1      
 607   1              // $[TMR4H - Timer 4 High Byte]
 608   1              /***********************************************************************
 609   1               - Timer 4 High Byte = 0xFE
 610   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 11  

 611   1              TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
 612   1              // [TMR4H - Timer 4 High Byte]$
 613   1      
 614   1              // $[TMR4L - Timer 4 Low Byte]
 615   1              /***********************************************************************
 616   1               - Timer 4 Low Byte = 0x68
 617   1               ***********************************************************************/
 618   1              TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 619   1              // [TMR4L - Timer 4 Low Byte]$
 620   1      
 621   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 622   1              /***********************************************************************
 623   1               - Timer 4 Reload High Byte = 0xFE
 624   1               ***********************************************************************/
 625   1              TMR4RLH = (0xFE << TMR4RLH_TMR4RLH__SHIFT);
 626   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 627   1      
 628   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 629   1              /***********************************************************************
 630   1               - Timer 4 Reload Low Byte = 0x68
 631   1               ***********************************************************************/
 632   1              TMR4RLL = (0x68 << TMR4RLL_TMR4RLL__SHIFT);
 633   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 634   1      
 635   1              TMR4RL = (uint16_t)(-SYSCLK / SAMPLE_RATE_DAC);
 636   1              // $[TMR4CN0]
 637   1              /***********************************************************************
 638   1               - Start Timer 4 running
 639   1               ***********************************************************************/
 640   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 641   1              // [TMR4CN0]$
 642   1      
 643   1              // $[Timer Restoration]
 644   1              // Restore Timer Configuration
 645   1              TMR4CN0 |= TMR4CN0_TR4_save;
 646   1              // [Timer Restoration]$
 647   1      
 648   1      }
 649          
 650          //================================================================================
 651          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 652          //================================================================================
 653          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 654   1              // $[CKCON0 - Clock Control 0]
 655   1              /***********************************************************************
 656   1               - System clock divided by 48
 657   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 658   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 659   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 660   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 661   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 662   1               - Timer 1 uses the clock defined by the prescale field, SCA
 663   1               ***********************************************************************/
 664   1              SFRPAGE = 0x00;
 665   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 666   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 667   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 668   1                              | CKCON0_T1M__PRESCALE;
 669   1              // [CKCON0 - Clock Control 0]$
 670   1      
 671   1              // $[CKCON1 - Clock Control 1]
 672   1              /***********************************************************************
 673   1               - Timer 4 high byte uses the clock defined by T4XCLK in TMR4CN0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 12  

 674   1               - Timer 4 low byte uses the system clock
 675   1               - Timer 5 high byte uses the clock defined by T5XCLK in TMR5CN0
 676   1               - Timer 5 low byte uses the clock defined by T5XCLK in TMR5CN0
 677   1               ***********************************************************************/
 678   1              SFRPAGE = 0x10;
 679   1              CKCON1 = CKCON1_T4MH__EXTERNAL_CLOCK | CKCON1_T4ML__SYSCLK
 680   1                              | CKCON1_T5MH__EXTERNAL_CLOCK | CKCON1_T5ML__EXTERNAL_CLOCK;
 681   1              // [CKCON1 - Clock Control 1]$
 682   1      
 683   1              // $[TMOD - Timer 0/1 Mode]
 684   1              /***********************************************************************
 685   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 686   1               - Mode 0, 13-bit Counter/Timer
 687   1               - Timer Mode
 688   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 689   1               - Timer Mode
 690   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 691   1               ***********************************************************************/
 692   1              SFRPAGE = 0x00;
 693   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 694   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 695   1              // [TMOD - Timer 0/1 Mode]$
 696   1      
 697   1              // $[TCON - Timer 0/1 Control]
 698   1              /***********************************************************************
 699   1               - Start Timer 0 running
 700   1               ***********************************************************************/
 701   1              TCON |= TCON_TR0__RUN;
 702   1              // [TCON - Timer 0/1 Control]$
 703   1      
 704   1      }
 705          
 706          //================================================================================
 707          // SPI_0_enter_DefaultMode_from_RESET
 708          //================================================================================
 709          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 710   1              // $[SPI0CKR - SPI0 Clock Rate]
 711   1              /***********************************************************************
 712   1               - SPI0 Clock Rate = 0x0B
 713   1               ***********************************************************************/
 714   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 715   1              // [SPI0CKR - SPI0 Clock Rate]$
 716   1      
 717   1              // $[SPI0CFG - SPI0 Configuration]
 718   1              /***********************************************************************
 719   1               - Enable master mode. Operate as a master
 720   1               ***********************************************************************/
 721   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 722   1              // [SPI0CFG - SPI0 Configuration]$
 723   1      
 724   1              // $[SPI0PCF - SPI0 Pin Configuration]
 725   1              // [SPI0PCF - SPI0 Pin Configuration]$
 726   1      
 727   1              // $[SPI0CN0 - SPI0 Control]
 728   1              /***********************************************************************
 729   1               - Enable the SPI module
 730   1               - 3-Wire Slave or 3-Wire Master Mode
 731   1               ***********************************************************************/
 732   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 733   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 734   1              // [SPI0CN0 - SPI0 Control]$
 735   1      
 736   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 13  

 737   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 738   1      
 739   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 740   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 741   1      
 742   1      }
 743          
 744          //================================================================================
 745          // INTERRUPT_0_enter_DefaultMode_from_RESET
 746          //================================================================================
 747          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 748   1              // $[EIE1 - Extended Interrupt Enable 1]
 749   1              /***********************************************************************
 750   1               - Disable ADC0 Conversion Complete interrupt
 751   1               - Disable ADC0 Window Comparison interrupt
 752   1               - Disable CP0 interrupts
 753   1               - Disable CP1 interrupts
 754   1               - Enable interrupt requests generated by a Port Match
 755   1               - Disable all PCA0 interrupts
 756   1               - Disable all SMB0 interrupts
 757   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 758   1               ***********************************************************************/
 759   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 760   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 761   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 762   1              // [EIE1 - Extended Interrupt Enable 1]$
 763   1      
 764   1              // $[EIE2 - Extended Interrupt Enable 2]
 765   1              /***********************************************************************
 766   1               - Disable CL0 interrupts
 767   1               - Disable all I2C0 slave interrupts
 768   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 769   1               - Disable Timer 5 interrupts
 770   1               - Disable UART1 interrupts
 771   1               ***********************************************************************/
 772   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
 773   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 774   1              // [EIE2 - Extended Interrupt Enable 2]$
 775   1      
 776   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 777   1              /***********************************************************************
 778   1               - ADC0 Conversion Complete interrupt priority MSB set to low
 779   1               - ADC0 Window interrupt priority MSB set to low
 780   1               - CP0 interrupt priority MSB set to low
 781   1               - CP1 interrupt priority MSB set to low
 782   1               - Port Match interrupt priority MSB set to high
 783   1               - PCA0 interrupt priority MSB set to low
 784   1               - SMB0 interrupt priority MSB set to low
 785   1               - Timer 3 interrupt priority MSB set to high
 786   1               ***********************************************************************/
 787   1              SFRPAGE = 0x10;
 788   1              EIP1H = EIP1H_PHADC0__LOW | EIP1H_PHWADC0__LOW | EIP1H_PHCP0__LOW
 789   1                              | EIP1H_PHCP1__LOW | EIP1H_PHMAT__HIGH | EIP1H_PHPCA0__LOW
 790   1                              | EIP1H_PHSMB0__LOW | EIP1H_PHT3__HIGH;
 791   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 792   1      
 793   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 794   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 795   1      
 796   1              // $[EIP2 - Extended Interrupt Priority 2]
 797   1              /***********************************************************************
 798   1               - CL0 interrupt priority LSB set to low
 799   1               - I2C0 Slave interrupt priority LSB set to low
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:59:47 PAGE 14  

 800   1               - Timer 4 interrupt priority LSB set to high
 801   1               - Timer 5 interrupt priority LSB set to low
 802   1               - UART1 interrupt priority LSB set to low
 803   1               ***********************************************************************/
 804   1              EIP2 = EIP2_PCL0__LOW | EIP2_PI2C0__LOW | EIP2_PT4__HIGH | EIP2_PT5__LOW
 805   1                              | EIP2_PS1__LOW;
 806   1              // [EIP2 - Extended Interrupt Priority 2]$
 807   1      
 808   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 809   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 810   1      
 811   1              // $[IE - Interrupt Enable]
 812   1              /***********************************************************************
 813   1               - Disable all interrupt sources
 814   1               - Disable external interrupt 0
 815   1               - Disable external interrupt 1
 816   1               - Enable interrupt requests generated by SPI0
 817   1               - Disable all Timer 0 interrupt
 818   1               - Disable all Timer 1 interrupt
 819   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 820   1               - Disable UART0 interrupt
 821   1               ***********************************************************************/
 822   1              SFRPAGE = 0x00;
 823   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 824   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 825   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 826   1              // [IE - Interrupt Enable]$
 827   1      
 828   1              // $[IP - Interrupt Priority]
 829   1              // [IP - Interrupt Priority]$
 830   1      
 831   1              // $[IPH - Interrupt Priority High]
 832   1              // [IPH - Interrupt Priority High]$
 833   1      
 834   1      }
 835          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
